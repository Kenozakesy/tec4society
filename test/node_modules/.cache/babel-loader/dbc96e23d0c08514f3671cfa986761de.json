{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KoenW\\\\Documents\\\\School\\\\Github\\\\tec4society\\\\test\\\\src\\\\components\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from '../navbar/navbar';\nimport CounterList from \"../counterList/counterList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }],\n      sum: 0\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters: counters\n      });\n      this.setState({\n        sum: this.handleSum()\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters: counters\n      });\n      this.setState({\n        sum: this.handleSum()\n      }); //this does not work yet\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter); //counters[index] = {...counter} //not necessary\n\n      counters[index].value++;\n      this.setState({\n        counters: counters\n      });\n      this.setState({\n        sum: this.handleSum()\n      });\n    };\n\n    this.handleSum = () => {\n      const counters = [...this.state.counters];\n      let sum = 0;\n      counters.forEach(function (item) {\n        sum = sum + item.value;\n      });\n      console.log(sum);\n      return sum;\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.counters.filter(c => c.value > 0).length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CounterList, {\n      counters: this.state.counters,\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nApp.propTypes = {};\nexport default App;","map":{"version":3,"sources":["C:/Users/KoenW/Documents/School/Github/tec4society/test/src/components/app/App.js"],"names":["React","Component","NavBar","CounterList","App","state","counters","id","value","sum","handleReset","map","c","setState","handleSum","handleDelete","counterId","filter","handleIncrement","counter","index","indexOf","forEach","item","console","log","render","length","propTypes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport NavBar from '../navbar/navbar'\r\nimport CounterList from \"../counterList/counterList\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0},\r\n      { id: 2, value: 0},\r\n      { id: 3, value: 0},\r\n      { id: 4, value: 0},\r\n    ],\r\n    sum: 0\r\n  }\r\n\r\n  handleReset = () => {\r\n    const counters = this.state.counters.map(c => {\r\n      c.value = 0;\r\n      return c;\r\n    });\r\n    this.setState({ counters: counters });\r\n    this.setState({ sum: this.handleSum()})\r\n  };\r\n  handleDelete = (counterId) => {\r\n    const counters = this.state.counters.filter(c => c.id !== counterId);\r\n    this.setState({ counters: counters})\r\n    this.setState({ sum: this.handleSum()}) //this does not work yet\r\n  };\r\n  handleIncrement = counter => {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter)\r\n    //counters[index] = {...counter} //not necessary\r\n    counters[index].value++;\r\n    this.setState({counters: counters})\r\n    this.setState({sum: this.handleSum()})\r\n  };\r\n  handleSum = () => {\r\n    const counters = [...this.state.counters];\r\n    let sum = 0;\r\n    counters.forEach(function(item) {\r\n      sum = sum + item.value\r\n      }\r\n    )\r\n    console.log(sum)\r\n    return sum;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length}></NavBar>\r\n          <main className=\"container\">\r\n            <CounterList\r\n                counters={this.state.counters}\r\n                onReset={this.handleReset}\r\n                onIncrement={this.handleIncrement}\r\n                onDelete={this.handleDelete}\r\n            />\r\n          </main>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {};\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}