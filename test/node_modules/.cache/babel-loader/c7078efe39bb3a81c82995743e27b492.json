{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\KoenW\\\\Documents\\\\School\\\\Github\\\\tec4society\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\KoenW\\\\Documents\\\\School\\\\Github\\\\tec4society\\\\test\\\\src\\\\components\\\\app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from '../navbar/navbar';\nimport CounterList from \"../counterList/counterList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }],\n      sum: 0\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters: counters\n      });\n      this.handleSum(counters);\n    };\n\n    this.handleDelete = counterId => {\n      //this does not work yet\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters: counters\n      });\n      this.handleSum(counters);\n    };\n\n    this.handleAdd = () => {\n      //this does not work yet\n      const counters = [...this.state.counters];\n      const length = counters.length;\n      const idNumber = Math.max.apply(Math, this.state.counters.map(function (o) {\n        return o.id;\n      })) + 1;\n      console.log(idNumber);\n      counters[length] = {\n        id: idNumber,\n        value: 0\n      }; //this.setState({ counters: counters});\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      this.setState({\n        counters: counters\n      });\n      this.handleSum(counters);\n    };\n\n    this.handleSum = counters => {\n      let sum = 0;\n      counters.forEach(c => {\n        sum += c.value;\n      });\n      this.setState({\n        sum: sum\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.sum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CounterList, {\n      counters: this.state.counters,\n      onReset: this.handleReset,\n      onAdd: this.handleAdd,\n      onIncrement: this.handleIncrement,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nApp.propTypes = {};\nexport default App;","map":{"version":3,"sources":["C:/Users/KoenW/Documents/School/Github/tec4society/test/src/components/app/App.js"],"names":["React","Component","NavBar","CounterList","App","state","counters","id","value","sum","handleReset","map","c","setState","handleSum","handleDelete","counterId","filter","handleAdd","length","idNumber","Math","max","apply","o","console","log","handleIncrement","counter","index","indexOf","forEach","render","propTypes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport NavBar from '../navbar/navbar'\r\nimport CounterList from \"../counterList/counterList\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0},\r\n      { id: 2, value: 0},\r\n      { id: 3, value: 0},\r\n      { id: 4, value: 0},\r\n    ],\r\n    sum: 0\r\n  }\r\n\r\n  handleReset = () => {\r\n    const counters = this.state.counters.map(c => {\r\n      c.value = 0;\r\n      return c;\r\n    });\r\n\r\n    this.setState({ counters: counters });\r\n    this.handleSum(counters)\r\n  };\r\n  handleDelete = (counterId) => { //this does not work yet\r\n    const counters = this.state.counters.filter(c => c.id !== counterId);\r\n\r\n    this.setState({ counters: counters});\r\n    this.handleSum(counters);\r\n  };\r\n  handleAdd = () => { //this does not work yet\r\n    const counters = [...this.state.counters];\r\n    const length = counters.length;\r\n    const idNumber = Math.max.apply(Math, this.state.counters.map(function(o) { return o.id; })) + 1\r\n    console.log(idNumber);\r\n    counters[length] = { id: idNumber, value: 0};\r\n    //this.setState({ counters: counters});\r\n  };\r\n  handleIncrement = counter => {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter)\r\n    counters[index] = {...counter}\r\n    counters[index].value++;\r\n\r\n    this.setState({counters: counters})\r\n    this.handleSum(counters)\r\n  };\r\n  handleSum = (counters) => {\r\n    let sum = 0;\r\n    counters.forEach(c => {\r\n      sum += c.value;\r\n      }\r\n    )\r\n    this.setState({sum: sum})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <NavBar totalCounters={this.state.sum}></NavBar>\r\n          <main className=\"container\">\r\n            <CounterList\r\n                counters={this.state.counters}\r\n                onReset={this.handleReset}\r\n                onAdd={this.handleAdd}\r\n                onIncrement={this.handleIncrement}\r\n                onDelete={this.handleDelete}\r\n            />\r\n          </main>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {};\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}