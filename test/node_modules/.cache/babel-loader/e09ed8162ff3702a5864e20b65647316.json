{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KoenW\\\\Documents\\\\School\\\\Github\\\\tec4society\\\\test\\\\src\\\\components\\\\counterList\\\\counter\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport './counter.css';\n\nclass Counter extends Component {\n  //State\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        value: this.state.value + 1\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        value: this.state.value = 0\n      });\n    };\n\n    this.handleIncrement = this.handleIncrement.bind(this);\n  } //HTML\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"divCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      onClick: () => this.handleIncrement(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm \",\n      onClick: () => this.handleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Reset\"));\n  } //Methods\n\n\n  formatCount() {\n    const value = this.state.value;\n    return value === 0 ? \"Zero\" : value;\n  }\n\n  getBadgeClasses() {\n    let classes = \"warningButtonText badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"There are no tags\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, tag)));\n  }\n\n  // runs when the page is updates\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(this.state.value);\n  }\n\n}\n\nCounter.propTypes = {};\nexport default Counter;","map":{"version":3,"sources":["C:/Users/KoenW/Documents/School/Github/tec4society/test/src/components/counterList/counter/counter.jsx"],"names":["React","Component","Counter","constructor","props","state","value","tags","handleIncrement","setState","handleReset","bind","render","getBadgeClasses","formatCount","classes","renderTags","length","map","tag","componentDidUpdate","prevProps","prevState","snapshot","console","log","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5B;AAMAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SALnBC,KAKmB,GALX;AACJC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADd;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AAFF,KAKW;;AAAA,SA0CnBC,eA1CmB,GA0CD,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KA5CkB;;AAAA,SA6CnBI,WA7CmB,GA6CL,MAAM;AAChB,WAAKD,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KA/CkB;;AAEf,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBG,IAArB,CAA0B,IAA1B,CAAvB;AACH,GAX2B,CAa5B;;;AACAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CAFJ,EAII;AACI,MAAA,SAAS,EAAC,0BADd;AAEI,MAAA,OAAO,EAAG,MAAM,KAAKN,eAAL,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EASI;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,OAAO,EAAG,MAAM,KAAKE,WAAL,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CADJ;AAmBH,GAlC2B,CAoC5B;;;AACAI,EAAAA,WAAW,GAAG;AAAA,UACFR,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAEV,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AACDO,EAAAA,eAAe,GAAG;AACd,QAAIE,OAAO,GAAG,oCAAd;AACAA,IAAAA,OAAO,IAAI,KAAKV,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOS,OAAP;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKX,KAAL,CAAWE,IAAX,CAAgBU,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AAClC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKZ,KAAL,CAAWE,IAAX,CAAgBW,GAAhB,CAAoBC,GAAG,IAAI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAA3B,CAAN,CAAP;AACH;;AAQD;AACAC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWC,KAAvB;AACH;;AA5D2B;;AA+DhCJ,OAAO,CAACwB,SAAR,GAAoB,EAApB;AACA,eAAexB,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './counter.css'\r\n\r\nclass Counter extends Component {\r\n\r\n    //State\r\n    state = {\r\n        value: this.props.value,\r\n        tags: ['tag1','tag2','tag3']\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n    }\r\n\r\n    //HTML\r\n    render() {\r\n        return (\r\n            <div className=\"divCenter\">\r\n                {/*<h4>Counter #{this.props.id}</h4>*/}\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n\r\n                <button\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={ () => this.handleIncrement()}\r\n                >Increment</button>\r\n                \r\n                <button\r\n                    className=\"btn btn-danger btn-sm \"\r\n                    onClick={ () => this.handleReset()}\r\n                >Reset</button>\r\n\r\n                {/*{this.state.tags.length === 0 && 'Please create a new tag'}*/}\r\n                {/*{this.renderTags()}*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Methods\r\n    formatCount() {\r\n        const { value } = this.state;\r\n        return value === 0 ? \"Zero\" : value;\r\n    }\r\n    getBadgeClasses() {\r\n        let classes = \"warningButtonText badge m-2 badge-\";\r\n        classes += this.state.value === 0 ? \"warning\" : \"primary\"\r\n        return classes;\r\n    }\r\n    renderTags() {\r\n        if (this.state.tags.length === 0) return <p>There are no tags</p>\r\n        return <ul>{ this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\r\n    }\r\n    handleIncrement = () => {\r\n        this.setState({ value: this.state.value + 1})\r\n    }\r\n    handleReset = () => {\r\n        this.setState({ value: this.state.value = 0})\r\n    }\r\n\r\n    // runs when the page is updates\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(this.state.value)\r\n    }\r\n}\r\n\r\nCounter.propTypes = {};\r\nexport default Counter;\r\n\r\n"]},"metadata":{},"sourceType":"module"}